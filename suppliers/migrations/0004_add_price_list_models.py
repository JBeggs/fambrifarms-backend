# Generated by Django 5.0.9 on 2025-09-06 22:27

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0008_add_unique_product_name'),
        ('suppliers', '0003_alter_salesrep_is_active_alter_salesrep_is_primary_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='supplierproduct',
            name='supplier_category_code',
            field=models.CharField(blank=True, help_text='Supplier category code (BT, FRE, NVL, PRO, etc.)', max_length=10),
        ),
        migrations.AlterField(
            model_name='supplierproduct',
            name='supplier_product_code',
            field=models.CharField(blank=True, help_text='Supplier internal product code', max_length=100),
        ),
        migrations.AlterField(
            model_name='supplierproduct',
            name='supplier_product_name',
            field=models.CharField(blank=True, help_text='Product name as per supplier', max_length=200),
        ),
        migrations.CreateModel(
            name='SupplierPriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_date', models.DateField(help_text='Date on the price list document')),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('file_reference', models.CharField(blank=True, help_text='Reference to source file/image', max_length=200)),
                ('is_processed', models.BooleanField(default=False, help_text='Has this price list been processed and matched?')),
                ('notes', models.TextField(blank=True)),
                ('total_items', models.PositiveIntegerField(blank=True, null=True)),
                ('matched_items', models.PositiveIntegerField(blank=True, null=True)),
                ('unmatched_items', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_lists', to='suppliers.supplier')),
            ],
            options={
                'ordering': ['-list_date', '-received_date'],
                'unique_together': {('supplier', 'list_date')},
            },
        ),
        migrations.CreateModel(
            name='SupplierPriceListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_code', models.CharField(help_text='Full supplier product code', max_length=50)),
                ('product_description', models.CharField(help_text='Product description from supplier', max_length=200)),
                ('category_code', models.CharField(help_text='Category code (BT, FRE, NVL, etc.)', max_length=10)),
                ('quantity', models.PositiveIntegerField(help_text='Quantity available')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('vat_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_excl_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_incl_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('match_confidence', models.DecimalField(blank=True, decimal_places=2, help_text='Matching confidence score (0-100)', max_digits=5, null=True)),
                ('match_method', models.CharField(blank=True, help_text='How this item was matched (exact, fuzzy, manual, etc.)', max_length=50)),
                ('is_manually_matched', models.BooleanField(default=False)),
                ('is_new_product', models.BooleanField(default=False, help_text='Flagged as potentially new product to add')),
                ('needs_review', models.BooleanField(default=False, help_text='Requires manual review')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matched_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='price_list_items', to='products.product')),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='suppliers.supplierpricelist')),
            ],
            options={
                'ordering': ['category_code', 'product_description'],
                'unique_together': {('price_list', 'supplier_code')},
            },
        ),
    ]
