# Generated by Django 5.0.9 on 2025-09-14 16:43

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0007_alter_pricehistory_is_validated_and_more'),
        ('products', '0009_productalert_recipe_delete_businesshours_and_more'),
        ('suppliers', '0004_add_price_list_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StockAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('order_period_start', models.DateField(help_text='Monday order date')),
                ('order_period_end', models.DateField(help_text='Thursday order date')),
                ('total_orders_value', models.DecimalField(decimal_places=2, help_text='Total value of all orders in this period', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_stock_value', models.DecimalField(decimal_places=2, help_text='Total value of available stock', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fulfillment_percentage', models.DecimalField(decimal_places=2, help_text='Percentage of orders that can be fulfilled', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('status', models.CharField(choices=[('analyzing', 'Analyzing'), ('completed', 'Completed'), ('action_required', 'Action Required')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Stock Analysis',
                'verbose_name_plural': 'Stock Analyses',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='StockAnalysisItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_ordered_quantity', models.DecimalField(decimal_places=2, help_text='Total quantity ordered by customers', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('available_stock_quantity', models.DecimalField(decimal_places=2, help_text='Available stock quantity', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('shortfall_quantity', models.DecimalField(decimal_places=2, help_text='Quantity shortfall (ordered - available)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Current unit price', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('needs_procurement', models.BooleanField(help_text='Whether this item needs to be procured')),
                ('suggested_order_quantity', models.DecimalField(blank=True, decimal_places=2, help_text='Suggested quantity to order from supplier', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('urgency_level', models.CharField(choices=[('low', 'Low - Normal Reorder'), ('medium', 'Medium - Stock Running Low'), ('high', 'High - Critical Shortage'), ('urgent', 'Urgent - Out of Stock')], max_length=20)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.stockanalysis')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('suggested_supplier', models.ForeignKey(blank=True, help_text='Recommended supplier for this item', null=True, on_delete=django.db.models.deletion.SET_NULL, to='suppliers.supplier')),
            ],
            options={
                'ordering': ['-urgency_level', '-shortfall_quantity'],
                'unique_together': {('analysis', 'product')},
            },
        ),
    ]
