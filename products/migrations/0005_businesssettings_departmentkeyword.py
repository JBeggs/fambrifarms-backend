# Generated by Django 5.0.9 on 2025-09-06 13:00

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_rawmaterialbatch_supplier'),
        ('products', '0004_product_common_names_product_in_stock_and_more'),
        ('suppliers', '0002_salesrep'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_minimum_level', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Default minimum stock level for new products', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('default_reorder_level', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Default reorder level for new products', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('default_maximum_level', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Default maximum stock level for new products', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('default_order_quantity', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Default quantity suggested when adding items to orders', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('max_price_variance_percent', models.DecimalField(decimal_places=2, default=Decimal('20.00'), help_text='Maximum allowed price variance percentage from historical average', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('require_price_approval_above', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), help_text='Require manager approval for prices above this amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('require_batch_tracking', models.BooleanField(default=True, help_text='Require batch/lot numbers for all inventory receipts')),
                ('require_expiry_dates', models.BooleanField(default=True, help_text='Require expiry dates for perishable goods')),
                ('require_quality_grades', models.BooleanField(default=True, help_text='Require quality grade selection (A, B, C, R) for received goods')),
                ('min_phone_digits', models.IntegerField(default=10, help_text='Minimum number of digits required in phone numbers', validators=[django.core.validators.MinValueValidator(8), django.core.validators.MaxValueValidator(15)])),
                ('require_email_validation', models.BooleanField(default=True, help_text='Require valid email format for customer emails')),
                ('auto_assign_department', models.BooleanField(default=False, help_text='Automatically assign products to departments based on keywords')),
                ('allow_negative_inventory', models.BooleanField(default=False, help_text='Allow inventory levels to go negative (overselling)')),
                ('auto_create_purchase_orders', models.BooleanField(default=False, help_text='Automatically create purchase orders when stock falls below reorder level')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_count_unit', models.ForeignKey(blank=True, help_text='Default unit for count-based products', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_settings_count', to='inventory.unitofmeasure')),
                ('default_department', models.ForeignKey(blank=True, help_text='Default department for new products when auto-assignment is disabled', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.department')),
                ('default_supplier', models.ForeignKey(blank=True, help_text='Default supplier for new raw materials', null=True, on_delete=django.db.models.deletion.SET_NULL, to='suppliers.supplier')),
                ('default_weight_unit', models.ForeignKey(blank=True, help_text='Default unit for weight-based products', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_settings_weight', to='inventory.unitofmeasure')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Last user to update these settings', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Settings',
                'verbose_name_plural': 'Business Settings',
            },
        ),
        migrations.CreateModel(
            name='DepartmentKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(help_text='Keyword to match in product names for automatic department assignment', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='products.department')),
            ],
            options={
                'verbose_name': 'Department Keyword',
                'verbose_name_plural': 'Department Keywords',
                'unique_together': {('department', 'keyword')},
            },
        ),
    ]
